name: Java CI with Gradle

on:
  push:
    paths:
      - "*.gradle"
      - "gradle.properties"
      - "src/**"
      - ".github/**"
  pull_request:
  release:
    types:
      - published


jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'release'

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v1
        with:
          java-version: 16

      - name: Cache gradle files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./.gradle/loom-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle', 'gradle.properties', '**/*.accesswidener') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build

      - uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/libs/

  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    strategy:
      matrix:
        include:
          - branch: 1.15.2
          - branch: 1.16.5

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
      - name: Set up JDK 16
        uses: actions/setup-java@v1
        with:
          java-version: 16

      - name: Cache gradle files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./.gradle/loom-cache
          key: ${{ runner.os }}-gradle-release
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build

      - name: Find correct JAR
        id: findjar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "::set-output name=jarname::$output"

      - uses: actions/upload-artifact@v2
        with:
          name: '[${{ matrix.release-branch }}] build-artifacts'
          path: build/libs/

      - name: Upload to the Github release
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/${{ steps.findjar.outputs.jarname }}
